com/azure/android/core/exception/AzureException = Com.Azure.Android.Core.Exception.AzureException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/azure/android/core/exception/ServiceResponseException = Com.Azure.Android.Core.Exception.ServiceResponseException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/azure/android/core/util/AsyncStream = Com.Azure.Android.Core.Util.IAsyncStream
  forEach(Lcom/azure/android/core/util/AsyncStreamHandler;)Lcom/azure/android/core/util/CancellationToken; = ForEach(Com.Azure.Android.Core.Util.IAsyncStreamHandler)
com/azure/android/core/util/AsyncStreamHandler = Com.Azure.Android.Core.Util.IAsyncStreamHandler
  onNext(Ljava/lang/Object;)V = OnNext(Java.Lang.Object)
com/azure/android/core/util/Base64Url = Com.Azure.Android.Core.Util.Base64Url
  <init>([B)V = .ctor(byte[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  decodedBytes()[B = DecodedBytes()
  encode([B)Lcom/azure/android/core/util/Base64Url; = Encode(byte[])
  encodedBytes()[B = EncodedBytes()
com/azure/android/core/util/Base64Util = Com.Azure.Android.Core.Util.Base64Util
  decode([B)[B = Decode(byte[])
  decodeString(Ljava/lang/String;)[B = DecodeString(string)
  decodeURL([B)[B = DecodeURL(byte[])
  encode([B)[B = Encode(byte[])
  encodeToString([B)Ljava/lang/String; = EncodeToString(byte[])
  encodeURLWithoutPadding([B)[B = EncodeURLWithoutPadding(byte[])
com/azure/android/core/util/BiConsumer = Com.Azure.Android.Core.Util.IBiConsumer
  accept(Ljava/lang/Object;Ljava/lang/Object;)V = Accept(Java.Lang.Object, Java.Lang.Object)
com/azure/android/core/util/CancellationToken = Com.Azure.Android.Core.Util.CancellationToken
  <init>()V = .ctor()
  NONE = None
  isCancellationRequested()Z = IsCancellationRequested
  cancel()V = Cancel()
  registerOnCancel(Ljava/lang/Runnable;)V = RegisterOnCancel(Java.Lang.IRunnable)
  registerOnCancel(Ljava/lang/String;Ljava/lang/Runnable;)V = RegisterOnCancel(string, Java.Lang.IRunnable)
  unregisterOnCancel(Ljava/lang/String;)V = UnregisterOnCancel(string)
com/azure/android/core/util/DateTimeRfc1123 = Com.Azure.Android.Core.Util.DateTimeRfc1123
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Lorg/threeten/bp/OffsetDateTime;)V = .ctor(ThreeTen.BP.OffsetDateTime)
  getDateTime()Lorg/threeten/bp/OffsetDateTime; = DateTime
com/azure/android/core/util/ExpandableStringEnum = Com.Azure.Android.Core.Util.ExpandableStringEnum
  <init>()V = .ctor()
  fromString(Ljava/lang/String;Ljava/lang/Class;)Lcom/azure/android/core/util/ExpandableStringEnum; = FromString(string, Java.Lang.Class)
  values(Ljava/lang/Class;)Ljava/util/Collection; = Values(Java.Lang.Class)
com/azure/android/core/util/Function = Com.Azure.Android.Core.Util.IFunction
  call(Ljava/lang/Object;)Ljava/lang/Object; = Call(Java.Lang.Object)
com/azure/android/core/util/Header = Com.Azure.Android.Core.Util.Header
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getName()Ljava/lang/String; = Name
  getValue()Ljava/lang/String; = Value
  addValue(Ljava/lang/String;)V = AddValue(string)
  getValues()[Ljava/lang/String; = GetValues()
com/azure/android/core/util/Option = Com.Azure.Android.Core.Util.Option
  isInitialized()Z = IsInitialized
  getValue()Ljava/lang/Object; = Value
  empty()Lcom/azure/android/core/util/Option; = Empty()
  of(Ljava/lang/Object;)Lcom/azure/android/core/util/Option; = Of(Java.Lang.Object)
  uninitialized()Lcom/azure/android/core/util/Option; = Uninitialized()
com/azure/android/core/util/paging/Page = Com.Azure.Android.Core.Util.Paging.IPage
  getContinuationToken()Ljava/lang/Object; = ContinuationToken
  getElements()Ljava/util/List; = Elements
com/azure/android/core/util/paging/PagedAsyncStreamCore = Com.Azure.Android.Core.Util.Paging.IPagedAsyncStreamCore
  byPage()Lcom/azure/android/core/util/AsyncStream; = ByPage()
  byPage(Ljava/lang/Object;)Lcom/azure/android/core/util/AsyncStream; = ByPage(Java.Lang.Object)
  from(Ljava/lang/Object;)Lcom/azure/android/core/util/AsyncStream; = From(Java.Lang.Object)
  getPage(Ljava/lang/String;Lcom/azure/android/core/util/BiConsumer;)V = GetPage(string, Com.Azure.Android.Core.Util.IBiConsumer)
com/azure/android/core/util/Predicate = Com.Azure.Android.Core.Util.IPredicate
  test(Ljava/lang/Object;)Z = Test(Java.Lang.Object)
com/azure/android/core/util/RequestContext = Com.Azure.Android.Core.Util.RequestContext
  <init>(Ljava/lang/Object;Ljava/lang/Object;)V = .ctor(Java.Lang.Object, Java.Lang.Object)
  NONE = None
  addData(Ljava/lang/Object;Ljava/lang/Object;)Lcom/azure/android/core/util/RequestContext; = AddData(Java.Lang.Object, Java.Lang.Object)
  getData(Ljava/lang/Object;)Lcom/azure/android/core/util/Option; = GetData(Java.Lang.Object)
com/azure/android/core/util/ServiceVersion = Com.Azure.Android.Core.Util.IServiceVersion
  getVersion()Ljava/lang/String; = Version
com/azure/android/core/util/UnixTime = Com.Azure.Android.Core.Util.UnixTime
  <init>(J)V = .ctor(long)
  <init>(Lorg/threeten/bp/OffsetDateTime;)V = .ctor(ThreeTen.BP.OffsetDateTime)
  getDateTime()Lorg/threeten/bp/OffsetDateTime; = DateTime
com/azure/core/micro/BuildConfig = Com.Azure.Core.Micro.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
